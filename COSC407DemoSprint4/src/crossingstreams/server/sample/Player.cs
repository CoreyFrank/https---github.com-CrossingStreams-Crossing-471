// automatically generated by the FlatBuffers compiler, do not modify

namespace sample
{

using System;
using FlatBuffers;

public struct Player : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Player __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public Vec3 Pos { get { return (new Vec3()).__assign(__p.bb_pos + 4, __p.bb); } }

  public static Offset<Player> CreatePlayer(FlatBufferBuilder builder, int Id, float pos_X, float pos_Y, float pos_Z) {
    builder.Prep(4, 16);
    builder.Prep(4, 12);
    builder.PutFloat(pos_Z);
    builder.PutFloat(pos_Y);
    builder.PutFloat(pos_X);
    builder.PutInt(Id);
    return new Offset<Player>(builder.Offset);
  }
};


}
